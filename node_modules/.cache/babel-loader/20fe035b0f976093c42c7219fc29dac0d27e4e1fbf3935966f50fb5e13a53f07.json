{"ast":null,"code":"var _jsxFileName = \"/Users/shkiper/Documents/GitHub/weather_web/src/components/Forecast.jsx\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Forecast = ({\n  forecastData,\n  cityName\n}) => {\n  if (!forecastData || !forecastData.list) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: \"\\u041D\\u0435\\u0442 \\u0434\\u0430\\u043D\\u043D\\u044B\\u0445 \\u043F\\u0440\\u043E\\u0433\\u043D\\u043E\\u0437\\u0430\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 16\n    }, this);\n  }\n  const groupForecastByDay = () => {\n    const grouped = {};\n    forecastData.list.forEach(item => {\n      if (!item || !item.dt || !item.main || !item.weather) return;\n      const date = new Date(item.dt * 1000).toLocaleDateString(\"ru-RU\");\n      if (!grouped[date]) {\n        grouped[date] = {\n          items: [],\n          minTemp: item.main.temp_min || 0,\n          maxTemp: item.main.temp_max || 0,\n          weather: item.weather[0] || {}\n        };\n      }\n      grouped[date].items.push(item);\n      if (item.main.temp_min !== undefined) {\n        grouped[date].minTemp = Math.min(grouped[date].minTemp, item.main.temp_min);\n      }\n      if (item.main.temp_max !== undefined) {\n        grouped[date].maxTemp = Math.max(grouped[date].maxTemp, item.main.temp_max);\n      }\n      const itemHour = new Date(item.dt * 1000).getHours();\n      if (itemHour >= 11 && itemHour <= 13 && item.weather[0]) {\n        grouped[date].weather = item.weather[0];\n      }\n    });\n    return grouped;\n  };\n  const dailyForecast = groupForecastByDay();\n  const forecastDays = Object.entries(dailyForecast).slice(0, 5);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"forecast\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"forecast-title\",\n      children: [\"\\u041F\\u0440\\u043E\\u0433\\u043D\\u043E\\u0437 \\u043D\\u0430 5 \\u0434\\u043D\\u0435\\u0439 - \", cityName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"forecast-grid\",\n      children: forecastDays.map(([date, dayData], index) => {\n        var _dayData$items$;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"forecast-day\",\n          style: {\n            animationDelay: `${index * 0.1}s`\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"forecast-date\",\n            children: new Date(((_dayData$items$ = dayData.items[0]) === null || _dayData$items$ === void 0 ? void 0 : _dayData$items$.dt) * 1000).toLocaleDateString(\"ru-RU\", {\n              weekday: \"short\",\n              day: \"numeric\"\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this), dayData.weather && dayData.weather.icon && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: `https://openweathermap.org/img/wn/${dayData.weather.icon}.png`,\n              alt: dayData.weather.description || \"Погода\",\n              className: \"forecast-icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"forecast-temps\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"max-temp\",\n                children: [\"\\u2191\", Math.round(dayData.maxTemp), \"\\xB0\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"min-temp\",\n                children: [\"\\u2193\", Math.round(dayData.minTemp), \"\\xB0\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 33\n            }, this), dayData.weather.description && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"forecast-desc\",\n              children: dayData.weather.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true)]\n        }, date, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n};\n_c = Forecast;\nexport default Forecast;\nvar _c;\n$RefreshReg$(_c, \"Forecast\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Fragment","_Fragment","Forecast","forecastData","cityName","list","className","children","fileName","_jsxFileName","lineNumber","columnNumber","groupForecastByDay","grouped","forEach","item","dt","main","weather","date","Date","toLocaleDateString","items","minTemp","temp_min","maxTemp","temp_max","push","undefined","Math","min","max","itemHour","getHours","dailyForecast","forecastDays","Object","entries","slice","map","dayData","index","_dayData$items$","style","animationDelay","weekday","day","icon","src","alt","description","round","_c","$RefreshReg$"],"sources":["/Users/shkiper/Documents/GitHub/weather_web/src/components/Forecast.jsx"],"sourcesContent":["import React from \"react\";\n\nconst Forecast = ({ forecastData, cityName }) => {\n    if (!forecastData || !forecastData.list) {\n        return <div className=\"error-message\">Нет данных прогноза</div>;\n    }\n\n    const groupForecastByDay = () => {\n        const grouped = {};\n\n        forecastData.list.forEach((item) => {\n            if (!item || !item.dt || !item.main || !item.weather) return;\n\n            const date = new Date(item.dt * 1000).toLocaleDateString(\"ru-RU\");\n            if (!grouped[date]) {\n                grouped[date] = {\n                    items: [],\n                    minTemp: item.main.temp_min || 0,\n                    maxTemp: item.main.temp_max || 0,\n                    weather: item.weather[0] || {},\n                };\n            }\n\n            grouped[date].items.push(item);\n            if (item.main.temp_min !== undefined) {\n                grouped[date].minTemp = Math.min(\n                    grouped[date].minTemp,\n                    item.main.temp_min,\n                );\n            }\n            if (item.main.temp_max !== undefined) {\n                grouped[date].maxTemp = Math.max(\n                    grouped[date].maxTemp,\n                    item.main.temp_max,\n                );\n            }\n\n            const itemHour = new Date(item.dt * 1000).getHours();\n            if (itemHour >= 11 && itemHour <= 13 && item.weather[0]) {\n                grouped[date].weather = item.weather[0];\n            }\n        });\n\n        return grouped;\n    };\n\n    const dailyForecast = groupForecastByDay();\n    const forecastDays = Object.entries(dailyForecast).slice(0, 5);\n\n    return (\n        <div className=\"forecast\">\n            <h2 className=\"forecast-title\">Прогноз на 5 дней - {cityName}</h2>\n            <div className=\"forecast-grid\">\n                {forecastDays.map(([date, dayData], index) => (\n                    <div\n                        key={date}\n                        className=\"forecast-day\"\n                        style={{ animationDelay: `${index * 0.1}s` }}\n                    >\n                        <h3 className=\"forecast-date\">\n                            {new Date(\n                                dayData.items[0]?.dt * 1000,\n                            ).toLocaleDateString(\"ru-RU\", {\n                                weekday: \"short\",\n                                day: \"numeric\",\n                            })}\n                        </h3>\n                        {dayData.weather && dayData.weather.icon && (\n                            <>\n                                <img\n                                    src={`https://openweathermap.org/img/wn/${dayData.weather.icon}.png`}\n                                    alt={\n                                        dayData.weather.description || \"Погода\"\n                                    }\n                                    className=\"forecast-icon\"\n                                />\n                                <div className=\"forecast-temps\">\n                                    <span className=\"max-temp\">\n                                        ↑{Math.round(dayData.maxTemp)}°\n                                    </span>\n                                    <span className=\"min-temp\">\n                                        ↓{Math.round(dayData.minTemp)}°\n                                    </span>\n                                </div>\n                                {dayData.weather.description && (\n                                    <p className=\"forecast-desc\">\n                                        {dayData.weather.description}\n                                    </p>\n                                )}\n                            </>\n                        )}\n                    </div>\n                ))}\n            </div>\n        </div>\n    );\n};\n\nexport default Forecast;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}